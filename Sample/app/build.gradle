apply from: "../scripts/versions.gradle"
apply plugin: 'com.android.application'
apply plugin: 'com.apollographql.android'

android {
    compileSdkVersion config.targetSdk
    buildToolsVersion config.buildTools

    defaultConfig {
        applicationId "entreco.nl.sample"
        minSdkVersion config.minSdk
        targetSdkVersion config.targetSdk
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

android {
    configurations.all {
        resolutionStrategy.force "com.google.code.findbugs:jsr305:${force.jsr}"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile "com.android.support:appcompat-v7:${compile.support}"
    compile "com.android.support:support-v4:${compile.support}"
    compile "com.android.support:recyclerview-v7:${compile.support}"
    compile "com.android.support:design:${compile.support}"
    compile "com.apollographql.apollo:apollo-runtime:${compile.apollo}"
    compile "com.squareup.okhttp3:logging-interceptor:${compile.okHttpVersion}"
    compile "com.squareup.retrofit2:retrofit:${compile.retrofit}"

    testCompile "junit:junit:${testCompile.jUnit}"
    testCompile "org.mockito:mockito-core:${testCompile.mockito}"
    testCompile "org.robolectric:robolectric:${testCompile.robolectric}"
    testCompile "org.robolectric:shadows-support-v4:${testCompile.robolectric}"
    testCompile "org.powermock:powermock-module-junit4:${testCompile.powerMock}"
    testCompile "org.powermock:powermock-api-mockito:${testCompile.powerMock}"
}
